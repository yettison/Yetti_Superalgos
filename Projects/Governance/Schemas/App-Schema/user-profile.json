{
    "type": "User Profile",
    "menuItems": [
        {
            "action": "Configure",
            "actionFunction": "uiObject.configEditor.activate",
            "label": "Configure",
            "iconPathOn": "configuration",
            "iconPathOff": "configuration"
        },
        {
            "action": "Open Menu",
            "label": "Add Child",
            "iconPathOn": "expand-structure-of-nodes",
            "iconPathOff": "expand-structure-of-nodes",
            "menuItems": [
                {
                    "action": "Add UI Object",
                    "actionProject": "Visual-Scripting",
                    "disableIfPropertyIsDefined": true,
                    "propertyToCheckFor": "tokenPowerSwitch",
                    "actionFunction": "payload.executeAction",
                    "label": "Add Token Power Switch",
                    "relatedUiObject": "Token Power Switch",
                    "relatedUiObjectProject": "Governance"
                },
                {
                    "action": "Add UI Object",
                    "actionProject": "Visual-Scripting",
                    "disableIfPropertyIsDefined": true,
                    "propertyToCheckFor": "tokensMined",
                    "actionFunction": "payload.executeAction",
                    "label": "Add Tokens Mined",
                    "relatedUiObject": "Tokens Mined",
                    "relatedUiObjectProject": "Governance"
                },
                {
                    "action": "Add UI Object",
                    "actionProject": "Visual-Scripting",
                    "disableIfPropertyIsDefined": true,
                    "propertyToCheckFor": "userApps",
                    "actionFunction": "payload.executeAction",
                    "label": "Add User Apps",
                    "relatedUiObject": "User Apps",
                    "relatedUiObjectProject": "User-Apps"
                },
                {
                    "action": "Add UI Object",
                    "actionProject": "Visual-Scripting",
                    "disableIfPropertyIsDefined": true,
                    "propertyToCheckFor": "userBots",
                    "actionFunction": "payload.executeAction",
                    "label": "Add User Bots",
                    "relatedUiObject": "User Bots",
                    "relatedUiObjectProject": "Governance"
                },
                {
                    "action": "Add UI Object",
                    "actionProject": "Visual-Scripting",
                    "disableIfPropertyIsDefined": true,
                    "propertyToCheckFor": "socialPersonas",
                    "actionFunction": "payload.executeAction",
                    "label": "Add Social Personas",
                    "relatedUiObject": "Social Personas",
                    "relatedUiObjectProject": "Social-Trading"
                },
                {
                    "action": "Add UI Object",
                    "actionProject": "Visual-Scripting",
                    "disableIfPropertyIsDefined": true,
                    "propertyToCheckFor": "p2pNetworkNodes",
                    "actionFunction": "payload.executeAction",
                    "label": "Add P2P Network Nodes",
                    "relatedUiObject": "P2P Network Nodes",
                    "relatedUiObjectProject": "Network"
                },
                {
                    "action": "Add UI Object",
                    "actionProject": "Visual-Scripting",
                    "disableIfPropertyIsDefined": true,
                    "propertyToCheckFor": "permissionedP2PNetworks",
                    "actionFunction": "payload.executeAction",
                    "label": "Add Permissioned P2P Networks",
                    "relatedUiObject": "Permissioned P2P Networks",
                    "relatedUiObjectProject": "Network"
                },                
                {
                    "action": "Add UI Object",
                    "actionProject": "Visual-Scripting",
                    "disableIfPropertyIsDefined": true,
                    "propertyToCheckFor": "userStorage",
                    "actionFunction": "payload.executeAction",
                    "label": "Add User Storage",
                    "relatedUiObject": "User Storage",
                    "relatedUiObjectProject": "Open-Storage"
                },                
                {
                    "action": "Add UI Object",
                    "actionProject": "Visual-Scripting",
                    "disableIfPropertyIsDefined": true,
                    "propertyToCheckFor": "forecastsProviders",
                    "actionFunction": "payload.executeAction",
                    "label": "Add Forecasts Providers",
                    "relatedUiObject": "Forecasts Providers",
                    "relatedUiObjectProject": "Governance"
                }
            ]
        },
        {
            "action": "Install as Plugin",
            "actionProject": "Community-Plugins",
            "askConfirmation": true,
            "confirmationLabel": "Confirm to Install",
            "label": "Install as Plugin",
            "iconPathOn": "configuration",
            "iconPathOff": "configuration",
            "actionFunction": "payload.executeAction"
        },
        {
            "action": "Save Plugin",
            "actionProject": "Community-Plugins",
            "askConfirmation": true,
            "confirmationLabel": "Confirm to Save",
            "label": "Save Plugin",
            "iconPathOn": "configuration",
            "iconPathOff": "configuration",
            "actionFunction": "payload.executeAction"
        },
        {
            "action": "Delete UI Object",
            "actionProject": "Visual-Scripting",
            "askConfirmation": true,
            "confirmationLabel": "Confirm to Delete",
            "label": "Delete",
            "iconPathOn": "delete-entity",
            "iconPathOff": "delete-entity",
            "actionFunction": "payload.executeAction"
        }
    ],
    "editors": {
        "config": true
    },
    "initialValues": {
        "config": "{}"
    },
    "isTitleAllwaysVisible": false,
    "isHierarchyHead": true,
    "addLeftIcons": true,
    "level": 0,
    "alternativeIcons": "Use External Github Icon",
    "childrenNodesProperties": [
        {
            "name": "tokenPowerSwitch",
            "type": "node",
            "childType": "Token Power Switch",
            "autoAdd": true
        },
        {
            "name": "tokensMined",
            "type": "node",
            "childType": "Tokens Mined",
            "autoAdd": true
        },
        {
            "name": "userApps",
            "type": "node",
            "childType": "User Apps",
            "project": "User-Apps",            
            "autoAdd": false
        },
        {
            "name": "userBots",
            "type": "node",
            "childType": "User Bots",
            "autoAdd": false
        },
        {
            "name": "socialPersonas",
            "type": "node",
            "childType": "Social Personas",
            "project": "Social-Trading",
            "autoAdd": false
        },
        {
            "name": "p2pNetworkNodes",
            "type": "node",
            "childType": "P2P Network Nodes",
            "project": "Network",
            "autoAdd": false
        },
        {
            "name": "permissionedP2PNetworks",
            "type": "node",
            "childType": "Permissioned P2P Networks",
            "project": "Network",            
            "autoAdd": false
        },
        {
            "name": "userStorage",
            "type": "node",
            "childType": "User Storage",
            "project": "Open-Storage",
            "autoAdd": false
        },
        {
            "name": "forecastsProviders",
            "type": "node",
            "childType": "Forecasts Providers",
            "project": "Governance",
            "autoAdd": false
        }
    ],
    "inMapMode": {
        "showNodeType": false,
        "showHierarchyHeadRing": false,
        "smallIcon": true,
        "smallText": true
    }
}