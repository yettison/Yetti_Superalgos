{
    "topic": "Data Mining",
    "pageNumber": 19,
    "type": "Data Mining - Indicator Bots - Data Mining Workflow",
    "definition": {
        "text": "When running on a data mining operation, indicators follow a cycle designed to fulfill their purpose: to process data others have produced and make the result available for others to consume.",
        "updated": 1611427674749,
        "translations": [
            {
                "language": "DE",
                "text": "Bei einer Data-Mining-Operation folgen die Indikatoren einem Zyklus, der ihren Zweck erfüllt: Sie verarbeiten Daten, die andere produziert haben, und stellen das Ergebnis anderen zur Verfügung.",
                "updated": 1635276099757
            },
            {
                "language": "RU",
                "text": "При выполнении операции интеллектуального анализа данных индикаторы следуют циклу, разработанному для выполнения своей цели: обрабатывать данные, созданные другими, и делать результат доступным для использования другими.",
                "updated": 1639666789006
            },
            {
                "language": "TR",
                "text": "Özet: Bir veri madenciliği operasyonunda çalışırken, göstergeler amaçlarını yerine getirmek için tasarlanmış bir döngüyü takip eder: başkalarının ürettiği verileri işlemek ve sonucu başkalarının tüketmesi için kullanılabilir hale getirmek.",
                "updated": 1645971537219
            }
        ]
    },
    "paragraphs": [
        {
            "style": "Text",
            "text": "Indicators take datasets produced by sensors or by other indicators as inputs. These inputs are determined by the defined data dependencies. ",
            "updated": 1652828609157,
            "translations": [
                {
                    "language": "DE",
                    "text": "Indicators nehmen Datensätze, die von Sensoren oder anderen Indicators erzeugt werden, als Input. Diese Eingaben werden durch die definierten Datenabhängigkeiten bestimmt. Die Berechnungsprozedur und die Datenerstellungsprozedur erzeugen die beabsichtigten Transformationen. Die Datenerstellungsprozedur speichert die Ergebnisse in Datensätzen, die andere als Eingabe verwenden können, und die Berechnungsprozedur kann bestimmte Informationen zur Verfügung stellen, ohne sie jemals in die Dateien zu schreiben.",
                    "updated": 1635276217755
                },
                {
                    "language": "RU",
                    "text": "Индикаторы принимают в качестве входных данных наборы данных, полученные с помощью датчиков или других индикаторов. Эти входные данные определяются определенными зависимостями данных. Процедура вычислений и процедура построения данных производят предполагаемые преобразования. Процедура построения данных сохраняет результаты в наборах данных, которые другие могут использовать в качестве входных,и процедура вычислений может сделать некоторые части информации доступными, даже не записывая их в файлы.",
                    "updated": 1639666827958
                },
                {
                    "language": "TR",
                    "text": "Göstergeler, sensörler veya diğer göstergeler tarafından üretilen veri kümelerini girdi olarak alır. Bu girdiler, tanımlanan veri bağımlılıkları tarafından belirlenir. Hesaplama prosedürü ve veri oluşturma prosedürü, amaçlanan dönüşümleri üretir. Veri oluşturma prosedürü, sonuçları, başkalarının girdi olarak kullanabileceği veri kümelerinde depolar ve hesaplama prosedürü, dosyalara hiç yazmadan belirli bilgi parçalarını kullanılabilir hale getirebilir.",
                    "updated": 1645971584660
                }
            ]
        },
        {
            "style": "Text",
            "text": "The calculations procedure and the data building procedure produce the intended transformations. The data building procedure stores the results in datasets that others may use as input, and the calculations procedure may make certain pieces of information available without ever writing it in the files."
        },
        {
            "style": "Text",
            "text": "The following is the breakdown of the cycle.",
            "translations": [
                {
                    "language": "DE",
                    "text": "Der Zyklus ist wie folgt aufgeschlüsselt.",
                    "updated": 1635276240360
                },
                {
                    "language": "RU",
                    "text": "Ниже приводится разбивка цикла.",
                    "updated": 1639666855447
                },
                {
                    "language": "TR",
                    "text": "Döngünün dökümü aşağıdadır.",
                    "updated": 1645971601877
                }
            ]
        },
        {
            "style": "Title",
            "text": "1. Loading of data dependencies",
            "translations": [
                {
                    "language": "DE",
                    "text": "1. Laden von data dependencies",
                    "updated": 1635276285780
                },
                {
                    "language": "RU",
                    "text": "1. Загрузка зависимостей данных",
                    "updated": 1639666867133
                },
                {
                    "language": "TR",
                    "text": "1. Veri bağımlılıklarının yüklenmesi",
                    "updated": 1645971613638
                }
            ]
        },
        {
            "style": "Text",
            "text": "Datasets produced by indicators are sets of text files with data stored in the form of arrays. Each value in a record is separated by colons, and each record is delimited by square brackets. Records are separated by commas. The format in which data is stored in files aims to make files as lightweight as possible.",
            "translations": [
                {
                    "language": "DE",
                    "text": "Die von den Indikatoren erzeugten Datensätze bestehen aus Textdateien, in denen die Daten in Form von Arrays gespeichert sind. Jeder Wert in einem Record wird durch Doppelpunkte getrennt, und jeder Record wird durch eckige Klammern abgegrenzt. Auch die Datensätze sind durch Doppelpunkte getrennt. Das Format, in dem die Daten in den Dateien gespeichert werden, zielt darauf ab, die Dateien so leicht (lightweight) wie möglich zu machen.",
                    "updated": 1635276444848
                },
                {
                    "language": "RU",
                    "text": "Наборы данных, создаваемые индикаторами, представляют собой наборы текстовых файлов с данными, хранящимися в виде массивов. Каждое значение в записи разделяется двоеточиями, а каждая запись заключена в квадратные скобки. Записи излишне разделены двоеточиями. Формат, в котором данные хранятся в файлах, направлен на то, чтобы сделать файлы как можно более легкими.",
                    "updated": 1639666951482
                },
                {
                    "language": "TR",
                    "text": "Göstergeler tarafından üretilen veri kümeleri, diziler biçiminde depolanan verileri içeren metin dosyaları kümeleridir. Bir kayıttaki her değer iki nokta üst üste ile ayrılır ve her kayıt köşeli parantez ile sınırlandırılır. Kayıtlar iki nokta üst üste ile çok ayrılmış. Verilerin dosyalarda saklandığı format, dosyaları olabildiğince hafif hale getirmeyi amaçlar.",
                    "updated": 1645971665203
                }
            ],
            "updated": 1652828712704
        },
        {
            "style": "Text",
            "text": "For example, the following fragment features three records in the 24-hours Multi-Time-Frame-Market Bollinger Bands Data.json file:",
            "translations": [
                {
                    "language": "DE",
                    "text": "Das folgende Fragment enthält beispielsweise drei Datensätze in der Datei 24-hours Multi-Time-Frame-Market Bollinger Bands Data.json:",
                    "updated": 1635276468980
                },
                {
                    "language": "RU",
                    "text": "Например, следующий фрагмент содержит три записи в файле 24-часовых Multi-Time-Frame-Market Bollinger Bands Data.json:",
                    "updated": 1639666971185
                },
                {
                    "language": "TR",
                    "text": "Örneğin, aşağıdaki parçada üç kayıt bulunur: 24 saatlik Çok Zamanlı Çerçeve Piyasası ( Multi-Time-Frame-Market ) Bollinger Bantları Data.json dosyası:",
                    "updated": 1645971759138
                }
            ]
        },
        {
            "style": "Json",
            "text": "... ,[1586044800000,1586131199999,6339.464,440.8934655492186,881.7869310984372],[1586131200000,1586217599999,6440.327,424.9041072418576,849.8082144837152],[1586217600000,1586303999999,6530.541,382.3824677453191,764.7649354906382], ..."
        },
        {
            "style": "Text",
            "text": "That is what the system encounters at the time of reading a typical file in a dataset, which is the first step in the runtime cycle.",
            "translations": [
                {
                    "language": "DE",
                    "text": "Das ist es, was das System beim Lesen einer typischen Datei in einem Datensatz, dem ersten Schritt im Laufzeitzyklus, vorfindet.",
                    "updated": 1635276614868
                },
                {
                    "language": "RU",
                    "text": "Это то, с чем сталкивается система во время чтения обычного файла в наборе данных, что является первым шагом в цикле выполнения.",
                    "updated": 1639666995424
                },
                {
                    "language": "TR",
                    "text": "Çalışma zamanı döngüsünün ilk adımı olan bir veri kümesindeki tipik bir dosyayı okurken sistemin karşılaştığı şey budur.",
                    "updated": 1645971830163
                }
            ]
        },
        {
            "style": "Title",
            "text": "2. Inflation of files into JSON objects with named properties",
            "translations": [
                {
                    "language": "DE",
                    "text": "2. Aufblasen (Inflation) von Dateien in JSON-Objekte mit benannten Eigenschaften:",
                    "updated": 1635276677178
                },
                {
                    "language": "RU",
                    "text": "2. Преобразование файлов в объекты JSON с именованными свойствами",
                    "updated": 1639667017776
                },
                {
                    "language": "TR",
                    "text": "2. Adlandırılmış özelliklere sahip dosyaların JSON nesnelerine şişirilmesi",
                    "updated": 1645971869323
                }
            ]
        },
        {
            "style": "Text",
            "text": "Once a file is loaded in memory, it is inflated into a JSON object structure, with named properties. This is the second step in the cycle and aims to make accessing each record—from within the code—much easier.",
            "translations": [
                {
                    "language": "DE",
                    "text": "Sobald eine Datei in den Speicher geladen ist, wird sie in eine JSON-Objektstruktur mit benannten Eigenschaften aufgeblasen. Dies ist der zweite Schritt im Zyklus und soll den Zugriff auf jeden Datensatz - innerhalb des Codes - wesentlich erleichtern.",
                    "updated": 1635276774378
                },
                {
                    "language": "RU",
                    "text": "После загрузки файла в память он преобразуется в объектную структуру JSON с именованными свойствами. Это второй шаг в цикле, цель которого - значительно упростить доступ к каждой записи из кода.",
                    "updated": 1639667033330
                },
                {
                    "language": "TR",
                    "text": "Bir dosya belleğe yüklendikten sonra, adlandırılmış özelliklere sahip bir JSON nesne yapısına şişirilir. Bu, döngüdeki ikinci adımdır ve her kayda -kod içinden- erişmeyi çok daha kolay hale getirmeyi amaçlar.",
                    "updated": 1645971931276
                }
            ]
        },
        {
            "style": "Title",
            "text": "3. Calculation of properties not stored in the dataset",
            "translations": [
                {
                    "language": "DE",
                    "text": "3. Berechnung von Eigenschaften, die nicht im Dataset gespeichert sind:",
                    "updated": 1635276920204
                },
                {
                    "language": "RU",
                    "text": "3. Вычисление свойств, не сохраненных в наборе данных",
                    "updated": 1639667051505
                },
                {
                    "language": "TR",
                    "text": "3. Veri setinde saklanmayan özelliklerin hesaplanması",
                    "updated": 1645971958163
                }
            ]
        },
        {
            "style": "Text",
            "text": "Because performance is inversely related to the weight of files, developers may choose not to store all indicator properties in files. They may choose to leave properties that are easy to calculate out of the dataset and make them available as calculated properties instead. Calculated properties are calculated by the calculations procedure and fed to the record definition formulas to be made available as an integral part of the object other indicators may access.",
            "translations": [
                {
                    "language": "DE",
                    "text": "Da die Leistung im umgekehrten Verhältnis zum Gewicht der Dateien steht, können sich Entwickler dafür entscheiden, nicht alle Indikatoreigenschaften in Dateien zu speichern. Sie können sich dafür entscheiden, Eigenschaften, die leicht zu berechnen sind, aus dem Datensatz herauszulassen und sie stattdessen als berechnete Eigenschaften verfügbar zu machen. Berechnete Eigenschaften werden von der Berechnungsprozedur berechnet und in die Formeln der Datensatzdefinition eingespeist, damit sie als integraler Bestandteil des Objekts, auf das andere Indikatoren zugreifen können, zur Verfügung stehen.",
                    "updated": 1635277103260
                },
                {
                    "language": "RU",
                    "text": "Поскольку производительность обратно пропорциональна весу файлов, разработчики могут не сохранять все свойства индикаторов в файлах. Они могут оставить свойства, которые легко вычислить, из набора данных и вместо этого сделать их доступными как вычисляемые свойства. Вычисляемые свойства вычисляются процедурой вычислений и передаются в формулы определения записи, которые становятся доступными как неотъемлемая часть объекта, к которому могут обращаться другие индикаторы.",
                    "updated": 1639667098689
                },
                {
                    "language": "TR",
                    "text": "Performans, dosyaların ağırlığıyla ters orantılı olduğundan, geliştiriciler tüm gösterge özelliklerini dosyalarda saklamamayı seçebilir. Hesaplanması kolay özellikleri veri kümesinin dışında bırakmayı ve bunun yerine bunları hesaplanmış özellikler olarak kullanılabilir hale getirmeyi seçebilirler. Hesaplanan özellikler, hesaplama prosedürü ile hesaplanır ve diğer göstergelerin erişebileceği nesnenin ayrılmaz bir parçası olarak kullanıma sunulacak kayıt tanımı formüllerine beslenir.",
                    "updated": 1645971988817
                }
            ]
        },
        {
            "style": "Text",
            "text": "For example, picture an indicator that offers buy, sell, and total volumes. Because the total volume is so easy to calculate, the developer of such an indicator may choose to store the buy and sell volumes only and make the total volume available as a calculated property.",
            "translations": [
                {
                    "language": "DE",
                    "text": "Stellen Sie sich zum Beispiel einen Indikator vor, der Kauf-, Verkaufs- und Gesamtvolumen anbietet. Da das Gesamtvolumen so einfach zu berechnen ist, kann der Entwickler eines solchen Indikators beschließen, nur das Kauf- und Verkaufsvolumen zu speichern und das Gesamtvolumen als berechnete Eigenschaft zur Verfügung zu stellen.",
                    "updated": 1635277150436
                },
                {
                    "language": "RU",
                    "text": "Например, представьте индикатор, который предлагает покупки, продажи и общие объемы. Поскольку общий объем очень легко рассчитать, разработчик такого индикатора может выбрать сохранение только объемов покупок и продаж и сделать общий объем доступным в качестве расчетного свойства.",
                    "updated": 1639667147245
                },
                {
                    "language": "TR",
                    "text": "Örneğin, alım, satım ve toplam hacimler sunan bir gösterge hayal edin. Toplam hacmi hesaplamak çok kolay olduğu için, böyle bir göstergenin geliştiricisi yalnızca alım satım hacimlerini saklamayı ve toplam hacmi hesaplanmış bir özellik olarak kullanıma sunmayı seçebilir.",
                    "updated": 1645972002283
                }
            ]
        },
        {
            "style": "Success",
            "text": "Make your indicators more efficient by limiting the amount of information you store in files.",
            "updated": 1611428939223,
            "translations": [
                {
                    "language": "DE",
                    "text": "Erhöhen Sie die Effizienz Ihrer Indikatoren, indem Sie die Menge der in Dateien gespeicherten Informationen begrenzen.",
                    "updated": 1635277178826
                },
                {
                    "language": "RU",
                    "text": "Сделайте свои индикаторы более эффективными, ограничив объем информации, которую вы храните в файлах.",
                    "updated": 1639667161658
                },
                {
                    "language": "TR",
                    "text": "İpucu: Dosyalarda sakladığınız bilgi miktarını sınırlayarak göstergelerinizi daha verimli hale getirin.",
                    "updated": 1645972027764
                }
            ]
        },
        {
            "style": "Text",
            "text": "The third step in the runtime cycle is, therefore, to run the calculations procedure of each data dependency and add the calculated properties to the JSON object structure in memory, so that all properties are available for the next steps in the cycle.",
            "translations": [
                {
                    "language": "DE",
                    "text": "Der dritte Schritt im Laufzeitzyklus besteht daher darin, die Berechnungsprozedur jeder Datenabhängigkeit auszuführen und die berechneten Eigenschaften der JSON-Objektstruktur im Speicher hinzuzufügen, so dass alle Eigenschaften für die nächsten Schritte im Zyklus verfügbar sind.",
                    "updated": 1635277221102
                },
                {
                    "language": "RU",
                    "text": "Таким образом, третьим шагом в цикле выполнения является выполнение процедуры вычислений каждой зависимости данных и добавление вычисленных свойств в структуру объекта JSON в памяти, чтобы все свойства были доступны для следующих шагов цикла.",
                    "updated": 1639667183316
                },
                {
                    "language": "TR",
                    "text": "Çalışma zamanı döngüsündeki üçüncü adım, bu nedenle, her veri bağımlılığının hesaplama prosedürünü çalıştırmak ve hesaplanan özellikleri bellekteki JSON nesne yapısına eklemektir, böylece tüm özellikler döngüdeki sonraki adımlar için kullanılabilir olur.",
                    "updated": 1645972051834
                }
            ]
        },
        {
            "style": "Title",
            "text": "4. Products structure",
            "translations": [
                {
                    "language": "DE",
                    "text": "4. Struktur der Produkte:",
                    "updated": 1635277246404
                },
                {
                    "language": "RU",
                    "text": "4. Структура продуктов",
                    "updated": 1639667201581
                },
                {
                    "language": "TR",
                    "text": "4. Ürün yapısı",
                    "updated": 1645972068643
                }
            ]
        },
        {
            "style": "Text",
            "text": "Steps 1, 2, and 3 are run for each one of the data dependencies, and the results are put inside an object named products. In this way, all data dependencies may be easily accessed with the following kind of syntax:",
            "translations": [
                {
                    "language": "DE",
                    "text": "Die Schritte 1, 2 und 3 werden für jede der Datenabhängigkeiten ausgeführt, und die Ergebnisse werden in einem Objekt namens \"products\" abgelegt. Auf diese Weise kann auf alle Datenabhängigkeiten mit der folgenden Art von Syntax leicht zugegriffen werden:",
                    "updated": 1635277911811
                },
                {
                    "language": "RU",
                    "text": "Шаги 1, 2 и 3 выполняются для каждой из зависимостей данных, а результаты помещаются в объект с именем products. Таким образом, все зависимости данных могут быть легко доступны с помощью следующего синтаксиса:",
                    "updated": 1639667222623
                },
                {
                    "language": "TR",
                    "text": "Adım 1, 2 ve 3, veri bağımlılıklarının her biri için çalıştırılır ve sonuçlar, ürünler adlı bir nesnenin içine yerleştirilir. Bu şekilde, tüm veri bağımlılıklarına aşağıdaki tür sözdizimi ile kolayca erişilebilir:",
                    "updated": 1645972090096
                }
            ]
        },
        {
            "style": "Javascript",
            "text": "products.pluralVariableName[index].property"
        },
        {
            "style": "Text",
            "text": "For example: ",
            "updated": 1611428967240,
            "translations": [
                {
                    "language": "DE",
                    "text": "Zum Beispiel:",
                    "updated": 1635278270836
                },
                {
                    "language": "RU",
                    "text": "Например:",
                    "updated": 1639667236352
                },
                {
                    "language": "TR",
                    "text": "Örnek :",
                    "updated": 1645972102858
                }
            ]
        },
        {
            "style": "Javascript",
            "text": "products.bollingerBands[10].deviation"
        },
        {
            "style": "Text",
            "text": "Each product remains an array of JSON objects with named variables.",
            "translations": [
                {
                    "language": "DE",
                    "text": "Jedes Produkt bleibt ein Array von JSON-Objekten mit benannten Variablen.",
                    "updated": 1635278286054
                },
                {
                    "language": "RU",
                    "text": "Каждый продукт остается массивом объектов JSON с именованными переменными.",
                    "updated": 1639667259620
                },
                {
                    "language": "TR",
                    "text": "Her ürün, adlandırılmış değişkenlere sahip bir JSON nesnesi dizisi olarak kalır.",
                    "updated": 1645972119072
                }
            ]
        },
        {
            "style": "Title",
            "text": "5. Data building",
            "translations": [
                {
                    "language": "DE",
                    "text": "5. Data building (Datenerstellung):",
                    "updated": 1635278314757
                },
                {
                    "language": "RU",
                    "text": "5. Построение данных",
                    "updated": 1639667361015
                },
                {
                    "language": "TR",
                    "text": "5. Veri oluşturma",
                    "updated": 1645972148901
                }
            ]
        },
        {
            "style": "Text",
            "text": "The fifth step in the runtime cycle is running the indicator’s data building procedure. This is where the developer codes the logic to go over the input datasets and perform the calculations required to produce the indicator’s output.",
            "translations": [
                {
                    "language": "DE",
                    "text": "Der fünfte Schritt im Laufzeitzyklus ist die Ausführung der Datenerstellungsprozedur des Indikators. Hier programmiert der Entwickler die Logik, um die Eingabedatensätze zu überprüfen und die Berechnungen durchzuführen, die für die Ausgabe des Indikators erforderlich sind.",
                    "updated": 1635278729512
                },
                {
                    "language": "RU",
                    "text": "Пятым шагом в цикле выполнения является выполнение процедуры построения данных индикатора. Именно здесь разработчик кодирует логику для просмотра входных наборов данных и выполнения вычислений, необходимых для получения выходных данных индикатора.",
                    "updated": 1639667326787
                },
                {
                    "language": "TR",
                    "text": "Çalışma zamanı döngüsündeki beşinci adım, göstergenin veri oluşturma prosedürünü yürütmektir. Geliştiricinin, giriş veri kümelerini gözden geçirmek ve göstergenin çıktısını üretmek için gereken hesaplamaları yapmak için mantığı kodladığı yer burasıdır.",
                    "updated": 1645972161011
                }
            ]
        },
        {
            "style": "Text",
            "text": "Indicators may have multiple products, thus, the data building procedure corresponding to each product is run sequentially, in the order products have been defined around the indicator bot node.",
            "translations": [
                {
                    "language": "DE",
                    "text": "Da Indikatoren mehrere Produkte haben können, wird das Datenerstellungsverfahren für jedes Produkt nacheinander in der Reihenfolge durchgeführt, in der die Produkte um den Indikator-bot node herum definiert worden sind.",
                    "updated": 1635278793170
                },
                {
                    "language": "RU",
                    "text": "Индикаторы могут иметь несколько продуктов, таким образом, процедура построения данных, соответствующая каждому продукту, выполняется последовательно, в том порядке, в котором продукты были определены вокруг Indicator Bot.",
                    "updated": 1639667441570
                },
                {
                    "language": "TR",
                    "text": "Göstergelerin birden fazla ürünü olabilir, bu nedenle her ürüne karşılık gelen veri oluşturma prosedürü, ürünlerin gösterge bot düğümü etrafında tanımlandığı sırayla sırayla çalıştırılır.",
                    "updated": 1645972170075
                }
            ]
        },
        {
            "style": "Text",
            "text": "As transformations for a given product are finished, the results are appended to the products object and made available immediately for the rest of the products in the queue to use as input, in addition to the original data dependencies. Data dependencies are the same for all products, as data dependencies are defined at the level of processes.",
            "translations": [
                {
                    "language": "DE",
                    "text": "Wenn die Transformationen für ein bestimmtes Produkt abgeschlossen sind, werden die Ergebnisse an das Produktobjekt angehängt und stehen den übrigen Produkten in der Warteschlange sofort als Eingabe zur Verfügung, und zwar zusätzlich zu den ursprünglichen Datenabhängigkeiten. Die Datenabhängigkeiten sind für alle Produkte gleich, da die Datenabhängigkeiten auf Prozessebene definiert werden.",
                    "updated": 1635278977927
                },
                {
                    "language": "RU",
                    "text": "По мере завершения преобразований для данного продукта результаты добавляются к объекту products и немедленно становятся доступными для остальных продуктов в очереди для использования в качестве входных данных в дополнение к исходным зависимостям данных. Зависимости данных одинаковы для всех продуктов, так как зависимости данных определяются на уровне процессов.",
                    "updated": 1639667507017
                },
                {
                    "language": "TR",
                    "text": "Belirli bir ürün için dönüşümler tamamlandığında, sonuçlar ürünler nesnesine eklenir ve orijinal veri bağımlılıklarına ek olarak kuyruktaki diğer ürünlerin girdi olarak kullanması için hemen kullanıma sunulur. Veri bağımlılıkları süreçler düzeyinde tanımlandığından, veri bağımlılıkları tüm ürünler için aynıdır.",
                    "updated": 1645972181938
                }
            ]
        },
        {
            "style": "Title",
            "text": "6. Writing the output",
            "translations": [
                {
                    "language": "DE",
                    "text": "6. Writing the output (Schreiben der Ausgabe):",
                    "updated": 1635278995057
                },
                {
                    "language": "RU",
                    "text": "6. Запись выходных данных",
                    "updated": 1639667671310
                },
                {
                    "language": "TR",
                    "text": "6. Çıktının Yazılması",
                    "updated": 1645972200222
                }
            ]
        },
        {
            "style": "Text",
            "text": "The final step is turning the object-formatted records back into a minimized array format, and saving the corresponding files in the dataset.",
            "translations": [
                {
                    "language": "DE",
                    "text": "Der letzte Schritt besteht darin, die objektformatierten Datensätze wieder in ein minimiertes Array-Format umzuwandeln und die entsprechenden Dateien im Dataset zu speichern.",
                    "updated": 1635279046312
                },
                {
                    "language": "RU",
                    "text": "Последним шагом является преобразование записей в формате объекта обратно в формат свернутого массива и сохранение соответствующих файлов в наборе данных.",
                    "updated": 1639667611620
                },
                {
                    "language": "TR",
                    "text": "Son adım, nesne biçimli kayıtları yeniden simge durumuna küçültülmüş bir dizi biçimine dönüştürmek ve ilgili dosyaları veri kümesine kaydetmektir.",
                    "updated": 1645972220087
                }
            ]
        },
        {
            "style": "Title",
            "text": "Appendix: Building 2 Interdependent Indicators",
            "translations": [
                {
                    "language": "DE",
                    "text": "Appendix: Building 2 Interdependent Indicators (bauen zweier Interdependente Indikatoren):",
                    "updated": 1635279096121
                },
                {
                    "language": "RU",
                    "text": "Приложение: Построение 2-х взаимозависимых индикаторов",
                    "updated": 1639667692740
                },
                {
                    "language": "TR",
                    "text": "Ek: Birbirine Bağlı 2 Gösterge Oluşturma",
                    "updated": 1645972360947
                }
            ]
        },
        {
            "style": "Text",
            "text": "Let's say you built indicator1 with product A that depends on Indicator Candles Volumens, product Candles, and you are building indicator2, product B that depends on indicator1 product A.",
            "translations": [
                {
                    "language": "DE",
                    "text": "Nehmen wir an, Sie haben Indikator 1 mit Produkt A erstellt, der vom Indikator Candles Volumens, Produkt Candles, abhängt, und Sie erstellen Indikator 2, Produkt B, der vom Indikator 1, Produkt A, abhängt.",
                    "updated": 1635279123786
                },
                {
                    "language": "RU",
                    "text": "Допустим, вы создали индикатор 1 с продуктом A, который зависит от Indicator Candles Volumes, продукта Candles, и вы создате индикатор2 с продуктом Б, который зависит от продукта A индикатора1.",
                    "updated": 1639669676667
                },
                {
                    "language": "TR",
                    "text": "Diyelim ki, Gösterge Mumları Hacimlerine, ürün Mumlarına bağlı olan A ürünüyle gösterge1 oluşturdunuz ve gösterge1 ürününe A bağlı olan gösterge2, ürün B'yi oluşturuyorsunuz.",
                    "updated": 1645972402985
                }
            ]
        },
        {
            "style": "Text",
            "text": "When you wrote the code for Indicator 1 Product A, you were using the syntax:",
            "translations": [
                {
                    "language": "DE",
                    "text": "Als Sie den Code für Indikator 1 Produkt A geschrieben haben, haben Sie die Syntax verwendet:",
                    "updated": 1635279152916
                },
                {
                    "language": "RU",
                    "text": "Когда вы писали код для Индикатора 1 продукта A, вы использовали синтаксис:",
                    "updated": 1639668182100
                },
                {
                    "language": "TR",
                    "text": "Gösterge 1 Ürün A'nın kodunu yazarken şu söz dizimini kullanıyordunuz:",
                    "updated": 1645972429732
                }
            ]
        },
        {
            "style": "Text",
            "text": "variable property1 = record.current.open",
            "translations": [
                {
                    "language": "TR",
                    "text": "değişken özellik1 = record.current.open",
                    "updated": 1645972443613
                }
            ]
        },
        {
            "style": "Text",
            "text": "Why? Because Indicator 1 depends on Candles Volumens, product Candles, and each candle has a property called open, and since product Candles is the only data dependency, it is then also the main dependency and then it will be served to you inside the record object for your convenience.",
            "updated": 1635279353336,
            "translations": [
                {
                    "language": "DE",
                    "text": "Warum? Weil Indikator 1 von Kerzenvolumina und Produktkerzen abhängt, und jede Kerze eine Eigenschaft namens \"open\" hat, und da Produktkerzen die einzige Datenabhängigkeit sind, ist dies auch die Hauptabhängigkeit und wird Ihnen innerhalb des Datensatzobjekts zu Ihrer Bequemlichkeit zur Verfügung gestellt.",
                    "updated": 1635279448402
                },
                {
                    "language": "RU",
                    "text": "Почему? Поскольку индикатор 1 зависит от Candles Volumes, продукта Candles, и каждая свеча имеет свойство, называемое 'open', и поскольку продукт Candles это единственная зависимость от данных, она также является основной зависимостью, а затем она будет предоставлена ​​вам внутри объекта записи для вашего удобства.",
                    "updated": 1639670107277
                },
                {
                    "language": "TR",
                    "text": "Neden? Gösterge 1, Mum Hacimlerine, ürün Mumlarına bağlı olduğundan ve her mumun açık olarak adlandırılan bir özelliği olduğundan ve ürün Mumlar tek veri bağımlılığı olduğundan, o zaman aynı zamanda ana bağımlılıktır ve daha sonra size kayıt nesnesinin içinde sunulacaktır. senin rahatlığın.",
                    "updated": 1645972464106
                }
            ]
        },
        {
            "style": "Subtitle",
            "text": "You could also have done:",
            "updated": 1635279487611,
            "translations": [
                {
                    "language": "DE",
                    "text": "Das hätten Sie auch so tun können:",
                    "updated": 1635279558626
                },
                {
                    "language": "RU",
                    "text": "Вы также можете:",
                    "updated": 1639670172882
                },
                {
                    "language": "TR",
                    "text": "Ayrıca şunları da yapabilirdiniz:",
                    "updated": 1645972516520
                }
            ]
        },
        {
            "style": "Text",
            "text": "variable property1 = products.candles[index] but that is more difficult because you don't really know which index you are at at any given moment in time. It is best and easier to use the record object. The array is for very advanced users.",
            "translations": [
                {
                    "language": "DE",
                    "text": "variable property1 = products.candles[index] aber das ist schwieriger, weil man nicht wirklich weiß, in welchem Index man sich zu einem bestimmten Zeitpunkt befindet. Am besten und einfachsten ist es, das Datensatzobjekt (record object) zu verwenden. Das Array ist für sehr fortgeschrittene Benutzer.",
                    "updated": 1635279751456
                },
                {
                    "language": "RU",
                    "text": "переменная property1 = products.candles[индекс], но это сложнее, потому что вы точно не знаете, в каком индексе вы находитесь в любой момент времени. Лучше и проще использовать объект записи. Массив предназначен для очень опытных пользователей.",
                    "updated": 1639670239059
                },
                {
                    "language": "TR",
                    "text": "değişken property1 = product.candles[index] ama bu daha zordur çünkü herhangi bir anda hangi indekste olduğunuzu gerçekten bilmiyorsunuzdur. Kayıt nesnesini kullanmak en iyisidir ve daha kolaydır. Dizi çok ileri düzey kullanıcılar içindir.",
                    "updated": 1645972530355
                }
            ]
        },
        {
            "style": "Text",
            "text": "Then you want to write the code for indicator 2, product B, you already declared Indicator 1, Product A as the only data dependency. ",
            "translations": [
                {
                    "language": "DE",
                    "text": "Wenn Sie dann den Code für Indikator 2, Produkt B, schreiben wollen, haben Sie bereits Indikator 1, Produkt A, als einzige Datenabhängigkeit deklariert.",
                    "updated": 1635281252028
                },
                {
                    "language": "RU",
                    "text": "Затем вы хотите написать код для индикатора 2, продукта Б, вы уже объявили индикатор 1, продукт A как единственную зависимость данных.",
                    "updated": 1639670390402
                },
                {
                    "language": "TR",
                    "text": "Ardından, gösterge 2, ürün B için kod yazmak istiyorsunuz, zaten tek veri bağımlılığı olarak Gösterge 1, Ürün A'yı beyan ettiniz.",
                    "updated": 1645972539631
                }
            ]
        },
        {
            "style": "Text",
            "text": "Since Indicator1 product A is the only data dependency of indicator 2, then it is also the main dependency, which means that for building indicator 2, the Data Building Process will iterate over every element of Indicator 1 in this case (not candles because that is not a dependency at all).",
            "translations": [
                {
                    "language": "DE",
                    "text": "Da das Produkt A von Indikator 1 die einzige Datenabhängigkeit von Indikator 2 ist, ist es auch die Hauptabhängigkeit, was bedeutet, dass der Datenerstellungsprozess bei der Erstellung von Indikator 2 in diesem Fall über jedes Element von Indikator 1 iteriert (nicht über Kerzen, da dies überhaupt keine Abhängigkeit ist).",
                    "updated": 1635281329720
                },
                {
                    "language": "RU",
                    "text": "Поскольку продукт A индикатора 1 является единственной зависимостью данных индикатора 2, то он также является основной зависимостью, что означает, что для построения индикатора 2 процесс построения данных Data Building Process будет перебирать каждый элемент индикатора 1 в этом случае (не свечи, потому что это вообще не зависимость).",
                    "updated": 1639670456483
                },
                {
                    "language": "TR",
                    "text": "Gösterge1 ürünü A, gösterge 2'nin tek veri bağımlılığı olduğundan, aynı zamanda ana bağımlılıktır; bu, gösterge 2'yi oluşturmak için Veri Oluşturma Süreci'nin bu durumda Gösterge 1'in her öğesini yineleyeceği anlamına gelir (mumlar değil çünkü bu bir bağımlılık değil).",
                    "updated": 1645972548380
                }
            ]
        },
        {
            "style": "Text",
            "text": "In the same way that you did before, you will write code like this:",
            "translations": [
                {
                    "language": "DE",
                    "text": "Auf die gleiche Art und Weise wie zuvor werden Sie den Code wie folgt schreiben:",
                    "updated": 1635281342982
                },
                {
                    "language": "RU",
                    "text": "Так же, как и раньше, вы напишете такой код:",
                    "updated": 1639670466824
                },
                {
                    "language": "TR",
                    "text": "Daha önce yaptığınız gibi, şöyle bir kod yazacaksınız:",
                    "updated": 1645972565944
                }
            ]
        },
        {
            "style": "Text",
            "text": "variable propertyX = record.current.property1 (that means the property 1 of Product A of Indicator 1) ",
            "translations": [
                {
                    "language": "DE",
                    "text": "variable propertyX = record.current.property1 (d. h. die Eigenschaft 1 des Produkts A des Indikators 1)",
                    "updated": 1635281359194
                },
                {
                    "language": "RU",
                    "text": "переменная propertyX = record.current.property1 (что означает свойство 1 продукта A индикатора 1)",
                    "updated": 1639670503829
                },
                {
                    "language": "TR",
                    "text": "değişken propertyX = record.current.property1 (bu, Gösterge 1'deki Ürün A'nın özelliği 1 anlamına gelir)",
                    "updated": 1645972576529
                }
            ]
        },
        {
            "style": "Text",
            "text": ""
        }
    ]
}